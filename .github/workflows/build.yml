name: "build"

permissions: {}

on:
  # run "test" job on push events as well to get main branch coverage
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: "cargo build"
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - id: toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # doesn't have usual versioned releases/tags
        with:
          toolchain: "1.56.0" # hardcoded crate MSRV, see rust-toolchain.toml etc.
          # minimal profile includes rustc component which includes cargo and rustdoc

      - uses: rui314/setup-mold@354d1662b2a6f02e5eccc9712f22657621bf645b # does not have recent tags

      - uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - run: cargo +${{ steps.toolchain.outputs.name }} build --all-targets --all-features --verbose

  test:
    name: "cargo test (with coverage)"
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - id: toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # doesn't have usual versioned releases/tags
        with:
          toolchain: "stable"
          # minimal profile includes rustc component which includes cargo and rustdoc

      - uses: rui314/setup-mold@354d1662b2a6f02e5eccc9712f22657621bf645b # does not have recent tags

      - uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - uses: taiki-e/install-action@94488150318c27687effe5a4a5d2f7e0b02d8233 # v2.22.10
        with:
          tool: cargo-llvm-cov@0.5.32

      - uses: taiki-e/install-action@94488150318c27687effe5a4a5d2f7e0b02d8233 # v2.22.10
        with:
          tool: cargo-careful@0.4.0

      - run: cargo +${{ steps.toolchain.outputs.name }} llvm-cov test --codecov --output-path codecov.json --all-targets --all-features --verbose

      - uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: codecov.json
          path: codecov.json

      # this will likely fail for forks, maybe adapt bencher.dev workaround with separate workflow for uploaded artifact
      - uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          files: codecov.json
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-careful:
    if: github.event_name == 'pull_request'
    name: "cargo test (carefully)"
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - id: toolchain
        uses: dtolnay/rust-toolchain@439cf607258077187679211f12aa6f19af4a0af7 # doesn't have usual versioned releases/tags
        with:
          toolchain: "nightly"
          # minimal profile includes rustc component which includes cargo and rustdoc
          components: rust-src

      - uses: rui314/setup-mold@354d1662b2a6f02e5eccc9712f22657621bf645b # does not have recent tags

      - uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8 # v2.7.1

      - uses: taiki-e/install-action@94488150318c27687effe5a4a5d2f7e0b02d8233 # v2.22.10
        with:
          tool: cargo-careful@0.4.0

      - run: cargo +${{ steps.toolchain.outputs.name }} careful test --all-targets --all-features --verbose

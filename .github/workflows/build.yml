name: "build"

permissions: {}

on:
  # run "test" job on push events as well to get main branch coverage
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: "cargo build"
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - id: toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396 # doesn't have usual versioned releases/tags
        with:
          toolchain: "1.56.0" # hardcoded crate MSRV, see rust-toolchain.toml etc.
          # minimal profile includes rustc component which includes cargo and rustdoc

      - uses: rui314/setup-mold@6bebc01caac32fb5251ee64f60cea0322d0e6574 # does not have recent tags

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

      - run: cargo +${{ steps.toolchain.outputs.name }} build --all-targets --all-features --verbose

  test:
    name: "cargo test (with coverage)"
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - id: toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396 # doesn't have usual versioned releases/tags
        with:
          toolchain: "stable"
          # minimal profile includes rustc component which includes cargo and rustdoc

      - uses: rui314/setup-mold@6bebc01caac32fb5251ee64f60cea0322d0e6574 # does not have recent tags

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

      - uses: taiki-e/install-action@af5d802f13195cc3a6becf3d19d72f7de93908d8 # v2.33.12
        with:
          tool: cargo-llvm-cov@0.5.32

      - uses: taiki-e/install-action@af5d802f13195cc3a6becf3d19d72f7de93908d8 # v2.33.12
        with:
          tool: cargo-careful@0.4.0

      - run: cargo +${{ steps.toolchain.outputs.name }} llvm-cov test --codecov --output-path codecov.json --all-targets --all-features --verbose

      - uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4.3.2
        with:
          name: codecov.json
          path: codecov.json

      # this will likely fail for forks, maybe adapt bencher.dev workaround with separate workflow for uploaded artifact
      - uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        with:
          files: codecov.json
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-careful:
    if: github.event_name == 'pull_request'
    name: "cargo test (carefully)"
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - id: toolchain
        uses: dtolnay/rust-toolchain@7164405e8653277d57afd42ba081b5aa02a70396 # doesn't have usual versioned releases/tags
        with:
          toolchain: "nightly"
          # minimal profile includes rustc component which includes cargo and rustdoc
          components: rust-src

      - uses: rui314/setup-mold@6bebc01caac32fb5251ee64f60cea0322d0e6574 # does not have recent tags

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

      - uses: taiki-e/install-action@af5d802f13195cc3a6becf3d19d72f7de93908d8 # v2.33.12
        with:
          tool: cargo-careful@0.4.0

      - run: cargo +${{ steps.toolchain.outputs.name }} careful test --all-targets --all-features --verbose
